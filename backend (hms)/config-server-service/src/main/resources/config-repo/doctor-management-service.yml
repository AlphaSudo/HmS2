# Server Configuration
server:
  port: ${SERVER_PORT_DOCTOR:8082}

# Spring Configuration
spring:
  # Database Configuration - Use environment variables for credentials
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DOCTOR_DB_NAME:hms_doctor_db}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL:true}
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Flyway Configuration - Disabled for local development
  flyway:
    enabled: false

# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET}  # Must be provided via environment variable
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:localhost}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  health:
    db:
      enabled: true

# Logging Configuration
logging:
  level:
    com.pro.doctormanagementservice: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.flywaydb: ${LOG_LEVEL_FLYWAY:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" 