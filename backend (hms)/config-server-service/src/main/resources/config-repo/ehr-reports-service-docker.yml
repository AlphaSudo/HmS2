# Docker-specific configuration for EHR Reports Service
server:
  port: 8088

spring:
  # Database Configuration for Docker
  datasource:
    url: jdbc:postgresql://postgres:5432/hms_ehr_db
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # MongoDB Configuration for Docker
  data:
    mongodb:
      uri: mongodb://mongodb:27017/hms_ehr_db
      auto-index-creation: true

  # Flyway Configuration
  flyway:
    enabled: false

# Kafka Configuration for Docker
kafka:
  bootstrap-servers: kafka:9092
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    acks: all
    retries: 3
    properties:
      spring.json.add.type.headers: false
  consumer:
    group-id: ehr-reports-service-group
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    auto-offset-reset: earliest
    properties:
      spring.json.trusted.packages: com.pro.ehrreportsservice.dto.events
  topic:
    appointment-events: appointment-events
    patient-events: patient-events
    doctor-events: doctor-events

# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET}
  cors:
    allowed-origins: http://localhost:5173,http://frontend:80

# Eureka Configuration for Docker
eureka:
  client:
    service-url:
      defaultZone: http://discovery-server-service:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: ehr-reports-service

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized

# Logging Configuration
logging:
  level:
    com.pro.ehrreportsservice: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.flywaydb: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" 